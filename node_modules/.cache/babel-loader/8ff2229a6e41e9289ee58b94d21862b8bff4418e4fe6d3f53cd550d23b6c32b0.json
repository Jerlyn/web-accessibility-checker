{"ast":null,"code":"// accessibilityEngine.js\n/**\n * A comprehensive accessibility analysis engine that examines HTML code\n * for common accessibility issues and provides detailed fixes.\n *//**\n * Analyze HTML code for accessibility issues\n * @param {string} htmlCode - The HTML code to analyze\n * @returns {Object} Analysis results with issues and fixed code\n */export function analyzeAccessibility(htmlCode){// Parse the HTML code\nconst parser=new DOMParser();const doc=parser.parseFromString(htmlCode,'text/html');// Initialize results\nconst results={issues:[],fixedCode:htmlCode};// Run all accessibility tests\nrunImageAltTextCheck(doc,results);runHeadingStructureCheck(doc,results);runFormLabelCheck(doc,results);runColorContrastCheck(doc,results);runLinkPurposeCheck(doc,results);runARIACheck(doc,results);runKeyboardNavigationCheck(doc,results);runDocumentLangCheck(doc,results);runButtonRoleCheck(doc,results);runTableStructureCheck(doc,results);// Apply all suggested fixes to generate the fixed code\nresults.fixedCode=applyFixes(htmlCode,results.issues);return results;}/**\n * Check for images without alt text\n */function runImageAltTextCheck(doc,results){const images=doc.querySelectorAll('img');images.forEach((img,index)=>{// Get line and column information (this would be more accurate in a real implementation)\nconst position=estimateElementPosition(img,index);if(!img.hasAttribute('alt')){results.issues.push({title:'Missing alt text for image',severity:'critical',wcagReference:'1.1.1 Non-text Content (Level A)',description:'Image elements must have an alt attribute that describes the image content or its purpose.',impact:'Screen reader users will not know what information the image conveys.',position,codeSnippet:getElementOuterHTML(img),fixExample:getElementOuterHTML(img).replace('<img ','<img alt=\"Descriptive text about this image\" '),learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content'});}else if(img.getAttribute('alt')===''){// Empty alt text is only appropriate for decorative images\nresults.issues.push({title:'Empty alt text - confirm if image is decorative',severity:'warning',wcagReference:'1.1.1 Non-text Content (Level A)',description:'This image has empty alt text. This is correct only if the image is purely decorative and conveys no information.',impact:'If this image conveys information but has empty alt text, screen reader users will miss that information.',position,codeSnippet:getElementOuterHTML(img),fixExample:`<!-- If decorative: -->\n${getElementOuterHTML(img)}\n<!-- If informative: -->\n${getElementOuterHTML(img).replace('alt=\"\"','alt=\"Descriptive text about this image\"')}`,learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#info-and-relationships'});}});}/**\n * Check for proper heading structure\n */function runHeadingStructureCheck(doc,results){const headings=Array.from(doc.querySelectorAll('h1, h2, h3, h4, h5, h6'));// Check if there's an H1\nif(!doc.querySelector('h1')){results.issues.push({title:'Missing H1 heading',severity:'critical',wcagReference:'1.3.1 Info and Relationships (Level A), 2.4.6 Headings and Labels (Level AA)',description:'Each page should have at least one H1 heading that identifies the page content.',impact:'Screen reader users rely on headings to understand page structure and navigate content.',position:{line:1,column:1},codeSnippet:'<body>\\n  <!-- No H1 heading found -->\\n</body>',fixExample:'<body>\\n  <h1>Main Page Title</h1>\\n  <!-- Rest of the content -->\\n</body>',learnMoreUrl:'https://www.w3.org/WAI/tutorials/page-structure/headings/'});}// Check for skipped heading levels\nfor(let i=0;i<headings.length-1;i++){const currentLevel=parseInt(headings[i].tagName[1]);const nextLevel=parseInt(headings[i+1].tagName[1]);if(nextLevel>currentLevel+1){const position=estimateElementPosition(headings[i+1],i+1);results.issues.push({title:`Skipped heading level (H${currentLevel} to H${nextLevel})`,severity:'warning',wcagReference:'1.3.1 Info and Relationships (Level A), 2.4.6 Headings and Labels (Level AA)',description:`Heading levels should not be skipped. Found H${currentLevel} followed by H${nextLevel}.`,impact:'Skipped heading levels create confusion in the document structure for screen reader users.',position,codeSnippet:getElementOuterHTML(headings[i+1]),fixExample:getElementOuterHTML(headings[i+1]).replace(new RegExp(`<h${nextLevel}`,'g'),`<h${currentLevel+1}`).replace(new RegExp(`</h${nextLevel}>`,'g'),`</h${currentLevel+1}>`),learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#headings-and-labels'});}}}/**\n * Check for form controls without associated labels\n */function runFormLabelCheck(doc,results){const formControls=doc.querySelectorAll('input, select, textarea');formControls.forEach((control,index)=>{const position=estimateElementPosition(control,index);const id=control.getAttribute('id');const type=control.getAttribute('type')||'';// Skip hidden inputs, submit buttons, and elements with aria-label or aria-labelledby\nif(type==='hidden'||type==='submit'||type==='button'||control.hasAttribute('aria-label')||control.hasAttribute('aria-labelledby')){return;}if(!id||!doc.querySelector(`label[for=\"${id}\"]`)){results.issues.push({title:'Form control without label',severity:'critical',wcagReference:'1.3.1 Info and Relationships, 3.3.2 Labels or Instructions (Level A)',description:`This ${control.tagName.toLowerCase()} element doesn't have a properly associated label.`,impact:'Screen reader users will not know the purpose of this form control, making it difficult or impossible to complete the form.',position,codeSnippet:getElementOuterHTML(control),fixExample:!id?`<label for=\"unique-id\">Label text</label>\\n${getElementOuterHTML(control).replace('<'+control.tagName.toLowerCase(),'<'+control.tagName.toLowerCase()+' id=\"unique-id\"')}`:`<label for=\"${id}\">Label text</label>\\n${getElementOuterHTML(control)}`,learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#labels-or-instructions'});}});}/**\n * Simplified implementation of color contrast check\n * Note: Real implementation would need to parse CSS and calculate actual contrast ratios\n */function runColorContrastCheck(doc,results){// This is a very simplified check - a real implementation would involve:\n// 1. Getting computed styles\n// 2. Calculating contrast ratios\n// 3. Checking against WCAG requirements\n// For now, we'll just check for inline styles with potentially problematic colors\nconst elementsWithInlineStyles=doc.querySelectorAll('[style*=\"color\"], [style*=\"background\"]');elementsWithInlineStyles.forEach((element,index)=>{const style=element.getAttribute('style');const position=estimateElementPosition(element,index);if(/color:\\s*#([0-9a-f]{3}){1,2}/i.test(style)||/color:\\s*rgb\\(/i.test(style)||/background(-color)?:\\s*#([0-9a-f]{3}){1,2}/i.test(style)||/background(-color)?:\\s*rgb\\(/i.test(style)){results.issues.push({title:'Potential color contrast issue',severity:'warning',wcagReference:'1.4.3 Contrast (Minimum) (Level AA)',description:'Inline styles with color values detected. Ensure text has sufficient contrast against its background.',impact:'Users with low vision or color blindness may have difficulty reading text without adequate contrast.',position,codeSnippet:getElementOuterHTML(element),fixExample:`<!-- Ensure a contrast ratio of at least 4.5:1 for normal text and 3:1 for large text -->\\n<!-- Consider using a color contrast checker tool -->`,learnMoreUrl:'https://webaim.org/resources/contrastchecker/'});}});}/**\n * Check for links with unclear purpose\n */function runLinkPurposeCheck(doc,results){const links=doc.querySelectorAll('a');links.forEach((link,index)=>{const position=estimateElementPosition(link,index);const linkText=link.textContent.trim();// Check for common ambiguous link text\nconst ambiguousTexts=['click here','read more','more','link','here','this page','learn more'];if(ambiguousTexts.includes(linkText.toLowerCase())){results.issues.push({title:'Ambiguous link text',severity:'warning',wcagReference:'2.4.4 Link Purpose (In Context) (Level A), 2.4.9 Link Purpose (Link Only) (Level AAA)',description:`Link text \"${linkText}\" doesn't clearly indicate its purpose or destination.`,impact:'Screen reader users often navigate by links, and ambiguous link text makes it difficult to understand where links lead.',position,codeSnippet:getElementOuterHTML(link),fixExample:getElementOuterHTML(link).replace(linkText,`Specific description of link destination`),learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#link-purpose-in-context'});}// Check for empty links\nif(linkText===''&&!link.querySelector('img[alt]')&&!link.hasAttribute('aria-label')&&!link.hasAttribute('aria-labelledby')){results.issues.push({title:'Empty link',severity:'critical',wcagReference:'2.4.4 Link Purpose (In Context) (Level A)',description:'This link has no text content or accessible name.',impact:'Screen reader users will not know the purpose of this link.',position,codeSnippet:getElementOuterHTML(link),fixExample:getElementOuterHTML(link).replace('<a ','<a aria-label=\"Description of link purpose\" '),learnMoreUrl:'https://www.w3.org/WAI/tutorials/images/decorative/'});}});}/**\n * Check for proper ARIA usage\n */function runARIACheck(doc,results){// Check for invalid ARIA roles\nconst elementsWithRoles=doc.querySelectorAll('[role]');// List of valid ARIA roles\nconst validRoles=['alert','alertdialog','application','article','banner','button','cell','checkbox','columnheader','combobox','complementary','contentinfo','definition','dialog','directory','document','feed','figure','form','grid','gridcell','group','heading','img','link','list','listbox','listitem','log','main','marquee','math','menu','menubar','menuitem','menuitemcheckbox','menuitemradio','navigation','none','note','option','presentation','progressbar','radio','radiogroup','region','row','rowgroup','rowheader','scrollbar','search','searchbox','separator','slider','spinbutton','status','switch','tab','table','tablist','tabpanel','term','textbox','timer','toolbar','tooltip','tree','treegrid','treeitem'];elementsWithRoles.forEach((element,index)=>{const role=element.getAttribute('role');const position=estimateElementPosition(element,index);if(!validRoles.includes(role)){results.issues.push({title:'Invalid ARIA role',severity:'critical',wcagReference:'4.1.2 Name, Role, Value (Level A)',description:`The role \"${role}\" is not a valid ARIA role.`,impact:'Assistive technologies rely on valid roles to communicate the purpose of elements to users.',position,codeSnippet:getElementOuterHTML(element),fixExample:getElementOuterHTML(element).replace(`role=\"${role}\"`,`role=\"[appropriate valid role]\"`),learnMoreUrl:'https://www.w3.org/TR/wai-aria-1.1/#role_definitions'});}});// Check for required ARIA attributes\nconst elementsWithRelevantRoles=doc.querySelectorAll('[role=\"checkbox\"], [role=\"combobox\"], [role=\"slider\"], [role=\"spinbutton\"]');elementsWithRelevantRoles.forEach((element,index)=>{const role=element.getAttribute('role');const position=estimateElementPosition(element,index);if(!element.hasAttribute('aria-checked')&&role==='checkbox'){results.issues.push({title:'Missing required ARIA attribute',severity:'critical',wcagReference:'4.1.2 Name, Role, Value (Level A)',description:'Elements with role=\"checkbox\" must have an aria-checked attribute.',impact:'Screen reader users will not know the state of this checkbox.',position,codeSnippet:getElementOuterHTML(element),fixExample:getElementOuterHTML(element).replace(`role=\"checkbox\"`,`role=\"checkbox\" aria-checked=\"false\"`),learnMoreUrl:'https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role'});}if(!element.hasAttribute('aria-valuemin')&&(role==='slider'||role==='spinbutton')){results.issues.push({title:'Missing required ARIA attribute',severity:'critical',wcagReference:'4.1.2 Name, Role, Value (Level A)',description:`Elements with role=\"${role}\" must have aria-valuemin, aria-valuemax, and aria-valuenow attributes.`,impact:'Screen reader users will not know the range and current value of this control.',position,codeSnippet:getElementOuterHTML(element),fixExample:getElementOuterHTML(element).replace(`role=\"${role}\"`,`role=\"${role}\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"50\"`),learnMoreUrl:`https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/${role}_role`});}});}/**\n * Check for keyboard navigability issues\n */function runKeyboardNavigationCheck(doc,results){// Check for tabindex values greater than 0\nconst elementsWithHighTabindex=doc.querySelectorAll('[tabindex]');elementsWithHighTabindex.forEach((element,index)=>{const tabindex=parseInt(element.getAttribute('tabindex'));const position=estimateElementPosition(element,index);if(tabindex>0){results.issues.push({title:'Positive tabindex value',severity:'warning',wcagReference:'2.1.1 Keyboard (Level A), 2.4.3 Focus Order (Level A)',description:`This element has tabindex=\"${tabindex}\". Positive tabindex values create a custom tab order that may be confusing.`,impact:'Keyboard users may experience an unexpected navigation order, making the page difficult to use.',position,codeSnippet:getElementOuterHTML(element),fixExample:getElementOuterHTML(element).replace(`tabindex=\"${tabindex}\"`,`tabindex=\"0\"`),learnMoreUrl:'https://www.w3.org/WAI/WCAG21/Techniques/html/H4'});}});// Check for potentially inaccessible custom controls\nconst customControls=doc.querySelectorAll('div[onclick], span[onclick]');customControls.forEach((element,index)=>{const position=estimateElementPosition(element,index);if(!element.hasAttribute('tabindex')&&!element.hasAttribute('role')){results.issues.push({title:'Inaccessible custom control',severity:'critical',wcagReference:'2.1.1 Keyboard (Level A), 4.1.2 Name, Role, Value (Level A)',description:'This element has click handlers but is not keyboard accessible and has no ARIA role.',impact:'Keyboard users and screen reader users cannot access this interactive element.',position,codeSnippet:getElementOuterHTML(element),fixExample:getElementOuterHTML(element).replace('<div','<div role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === \\'Enter\\') this.click()\"').replace('<span','<span role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === \\'Enter\\') this.click()\"'),learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#name-role-value'});}});}/**\n * Check for document language\n */function runDocumentLangCheck(doc,results){const html=doc.querySelector('html');if(!html.hasAttribute('lang')){results.issues.push({title:'Missing language attribute',severity:'critical',wcagReference:'3.1.1 Language of Page (Level A)',description:'The HTML element should have a lang attribute that identifies the language of the page.',impact:'Screen readers need the language attribute to correctly pronounce and interpret content.',position:{line:1,column:1},codeSnippet:getElementOuterHTML(html).substring(0,50)+'...',fixExample:getElementOuterHTML(html).replace('<html','<html lang=\"en\"'),learnMoreUrl:'https://www.w3.org/WAI/WCAG21/Techniques/html/H57'});}}/**\n * Check for div/span elements used as buttons\n */function runButtonRoleCheck(doc,results){// Find elements that might be functioning as buttons\nconst fakeButtons=doc.querySelectorAll('div[class*=\"button\"], span[class*=\"button\"], div[class*=\"btn\"], span[class*=\"btn\"]');fakeButtons.forEach((element,index)=>{const position=estimateElementPosition(element,index);if(!element.hasAttribute('role')){results.issues.push({title:'Div/span used as button without proper role',severity:'critical',wcagReference:'4.1.2 Name, Role, Value (Level A)',description:'This element appears to be used as a button but doesn\\'t have the button role.',impact:'Screen reader users will not know this element is a button.',position,codeSnippet:getElementOuterHTML(element),fixExample:`<!-- Better solution: Use a real button element -->\n<button class=\"${element.className}\">${element.innerHTML}</button>\n\n<!-- Alternative: Add proper ARIA role and keyboard support -->\n${getElementOuterHTML(element).replace(`<${element.tagName.toLowerCase()}`,`<${element.tagName.toLowerCase()} role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === 'Enter') this.click()\"`)}`,learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#name-role-value'});}});}/**\n * Check for proper table structure\n */function runTableStructureCheck(doc,results){const tables=doc.querySelectorAll('table');tables.forEach((table,index)=>{const position=estimateElementPosition(table,index);// Check for data tables without headers\nif(table.querySelectorAll('td').length>0&&table.querySelectorAll('th').length===0){results.issues.push({title:'Table missing headers',severity:'warning',wcagReference:'1.3.1 Info and Relationships (Level A)',description:'This table appears to be a data table but has no header cells (th elements).',impact:'Screen reader users will not know the relationship between header and data cells.',position,codeSnippet:getElementOuterHTML(table).substring(0,150)+'...',fixExample:`<table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Header 1</th>\n      <th scope=\"col\">Header 2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </tbody>\n</table>`,learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#focus-order'});}// Check for tables used for layout\nif(table.querySelectorAll('th').length===0&&!table.hasAttribute('role')&&table.querySelectorAll('table').length===0){results.issues.push({title:'Table potentially used for layout',severity:'info',wcagReference:'1.3.1 Info and Relationships (Level A)',description:'This table might be used for layout purposes. If so, it should have role=\"presentation\" or role=\"none\".',impact:'Screen readers announce layout tables as tables, which can confuse users when they\\'re used for visual layout only.',position,codeSnippet:getElementOuterHTML(table).substring(0,150)+'...',fixExample:`<!-- If this is a layout table: -->\n<table role=\"presentation\">\n  <!-- table content -->\n</table>\n\n<!-- Better modern solution: Use CSS for layout instead of tables -->`,learnMoreUrl:'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#language-of-page'});}});}/**\n * Helper function to estimate the position of an element\n * In a real implementation, this would be more accurate\n */function estimateElementPosition(element,index){// This is a simplification - a real implementation would \n// parse the actual HTML to get accurate line and column\nreturn{line:index+1,column:1};}/**\n * Get the outer HTML of an element \n * Handles potential serialization issues\n */function getElementOuterHTML(element){try{return element.outerHTML;}catch(e){return`<${element.tagName.toLowerCase()}>...</${element.tagName.toLowerCase()}>`;}}/**\n * Apply all fixes to the original HTML code\n */function applyFixes(originalHtml,issues){let fixedHtml=originalHtml;// Sort issues by position line/column in reverse order (bottom to top)\n// This prevents position changes from affecting later fixes\nconst sortedIssues=[...issues].sort((a,b)=>{if(b.position.line!==a.position.line){return b.position.line-a.position.line;}return b.position.column-a.position.column;});// Apply each fix\nsortedIssues.forEach(issue=>{// Handle special insertion cases first\nif(issue.insertBefore&&issue.insertContent){// For issues that need to insert content before an element\nif(issue.codeSnippet&&fixedHtml.includes(issue.codeSnippet)){fixedHtml=fixedHtml.replace(issue.codeSnippet,`${issue.insertContent}\\n${issue.codeSnippet}`);}}else if(issue.insertAfter&&issue.insertContent){// For issues that need to insert content after an element\nif(fixedHtml.includes(issue.insertAfter)){fixedHtml=fixedHtml.replace(issue.insertAfter,`${issue.insertAfter}${issue.insertContent}`);}}// Regular code snippet replacement\nelse if(issue.codeSnippet&&issue.fixExample){// Extract the fix from examples that may contain comments\nlet fixContent=issue.fixExample;// If the fix contains HTML comments with alternatives, extract the first recommended alternative\nif(fixContent.includes('<!-- ')){const alternatives=fixContent.split(/<!--.*?-->/g).map(part=>part.trim()).filter(part=>part.length>0);if(alternatives.length>0){fixContent=alternatives[0];}}// Apply the fix\nif(fixContent){// For exact match, do direct replacement\nif(fixedHtml.includes(issue.codeSnippet)){fixedHtml=fixedHtml.replace(issue.codeSnippet,fixContent);}// If not found, try to do a more context-aware replacement\nelse{// This is a simplified approach - a real implementation would\n// use a proper HTML parser for precise replacement\nconst lines=fixedHtml.split('\\n');const targetLine=issue.position.line-1;// 0-based index\nif(targetLine>=0&&targetLine<lines.length){// Simple heuristic: check if some part of the code snippet is in the line\nconst snippetWords=issue.codeSnippet.split(/[<>\\s=\"']/);const lineContainsSnippet=snippetWords.some(word=>word.length>3&&lines[targetLine].includes(word));if(lineContainsSnippet){lines[targetLine]=fixContent;fixedHtml=lines.join('\\n');}}}}}});return fixedHtml;}","map":{"version":3,"names":["analyzeAccessibility","htmlCode","parser","DOMParser","doc","parseFromString","results","issues","fixedCode","runImageAltTextCheck","runHeadingStructureCheck","runFormLabelCheck","runColorContrastCheck","runLinkPurposeCheck","runARIACheck","runKeyboardNavigationCheck","runDocumentLangCheck","runButtonRoleCheck","runTableStructureCheck","applyFixes","images","querySelectorAll","forEach","img","index","position","estimateElementPosition","hasAttribute","push","title","severity","wcagReference","description","impact","codeSnippet","getElementOuterHTML","fixExample","replace","learnMoreUrl","getAttribute","headings","Array","from","querySelector","line","column","i","length","currentLevel","parseInt","tagName","nextLevel","RegExp","formControls","control","id","type","toLowerCase","elementsWithInlineStyles","element","style","test","links","link","linkText","textContent","trim","ambiguousTexts","includes","elementsWithRoles","validRoles","role","elementsWithRelevantRoles","elementsWithHighTabindex","tabindex","customControls","html","substring","fakeButtons","className","innerHTML","tables","table","outerHTML","e","originalHtml","fixedHtml","sortedIssues","sort","a","b","issue","insertBefore","insertContent","insertAfter","fixContent","alternatives","split","map","part","filter","lines","targetLine","snippetWords","lineContainsSnippet","some","word","join"],"sources":["/Users/jerlynodonnell/Documents/web-accessibility-checker/src/engine/accessibilityEngine.js"],"sourcesContent":["// accessibilityEngine.js\n\n/**\n * A comprehensive accessibility analysis engine that examines HTML code\n * for common accessibility issues and provides detailed fixes.\n */\n\n/**\n * Analyze HTML code for accessibility issues\n * @param {string} htmlCode - The HTML code to analyze\n * @returns {Object} Analysis results with issues and fixed code\n */\nexport function analyzeAccessibility(htmlCode) {\n  // Parse the HTML code\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(htmlCode, 'text/html');\n  \n  // Initialize results\n  const results = {\n    issues: [],\n    fixedCode: htmlCode,\n  };\n  \n  // Run all accessibility tests\n  runImageAltTextCheck(doc, results);\n  runHeadingStructureCheck(doc, results);\n  runFormLabelCheck(doc, results);\n  runColorContrastCheck(doc, results);\n  runLinkPurposeCheck(doc, results);\n  runARIACheck(doc, results);\n  runKeyboardNavigationCheck(doc, results);\n  runDocumentLangCheck(doc, results);\n  runButtonRoleCheck(doc, results);\n  runTableStructureCheck(doc, results);\n  \n  // Apply all suggested fixes to generate the fixed code\n  results.fixedCode = applyFixes(htmlCode, results.issues);\n  \n  return results;\n}\n\n/**\n * Check for images without alt text\n */\nfunction runImageAltTextCheck(doc, results) {\n  const images = doc.querySelectorAll('img');\n  \n  images.forEach((img, index) => {\n    // Get line and column information (this would be more accurate in a real implementation)\n    const position = estimateElementPosition(img, index);\n    \n    if (!img.hasAttribute('alt')) {\n      results.issues.push({\n        title: 'Missing alt text for image',\n        severity: 'critical',\n        wcagReference: '1.1.1 Non-text Content (Level A)',\n        description: 'Image elements must have an alt attribute that describes the image content or its purpose.',\n        impact: 'Screen reader users will not know what information the image conveys.',\n        position,\n        codeSnippet: getElementOuterHTML(img),\n        fixExample: getElementOuterHTML(img).replace('<img ', '<img alt=\"Descriptive text about this image\" '),\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#non-text-content',\n      });\n    } else if (img.getAttribute('alt') === '') {\n      // Empty alt text is only appropriate for decorative images\n      results.issues.push({\n        title: 'Empty alt text - confirm if image is decorative',\n        severity: 'warning',\n        wcagReference: '1.1.1 Non-text Content (Level A)',\n        description: 'This image has empty alt text. This is correct only if the image is purely decorative and conveys no information.',\n        impact: 'If this image conveys information but has empty alt text, screen reader users will miss that information.',\n        position,\n        codeSnippet: getElementOuterHTML(img),\n        fixExample: `<!-- If decorative: -->\n${getElementOuterHTML(img)}\n<!-- If informative: -->\n${getElementOuterHTML(img).replace('alt=\"\"', 'alt=\"Descriptive text about this image\"')}`,\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#info-and-relationships',\n      });\n    }\n  });\n}\n\n/**\n * Check for proper heading structure\n */\nfunction runHeadingStructureCheck(doc, results) {\n  const headings = Array.from(doc.querySelectorAll('h1, h2, h3, h4, h5, h6'));\n  \n  // Check if there's an H1\n  if (!doc.querySelector('h1')) {\n    results.issues.push({\n      title: 'Missing H1 heading',\n      severity: 'critical',\n      wcagReference: '1.3.1 Info and Relationships (Level A), 2.4.6 Headings and Labels (Level AA)',\n      description: 'Each page should have at least one H1 heading that identifies the page content.',\n      impact: 'Screen reader users rely on headings to understand page structure and navigate content.',\n      position: { line: 1, column: 1 },\n      codeSnippet: '<body>\\n  <!-- No H1 heading found -->\\n</body>',\n      fixExample: '<body>\\n  <h1>Main Page Title</h1>\\n  <!-- Rest of the content -->\\n</body>',\n      learnMoreUrl: 'https://www.w3.org/WAI/tutorials/page-structure/headings/',\n    });\n  }\n  \n  // Check for skipped heading levels\n  for (let i = 0; i < headings.length - 1; i++) {\n    const currentLevel = parseInt(headings[i].tagName[1]);\n    const nextLevel = parseInt(headings[i + 1].tagName[1]);\n    \n    if (nextLevel > currentLevel + 1) {\n      const position = estimateElementPosition(headings[i + 1], i + 1);\n      \n      results.issues.push({\n        title: `Skipped heading level (H${currentLevel} to H${nextLevel})`,\n        severity: 'warning',\n        wcagReference: '1.3.1 Info and Relationships (Level A), 2.4.6 Headings and Labels (Level AA)',\n        description: `Heading levels should not be skipped. Found H${currentLevel} followed by H${nextLevel}.`,\n        impact: 'Skipped heading levels create confusion in the document structure for screen reader users.',\n        position,\n        codeSnippet: getElementOuterHTML(headings[i + 1]),\n        fixExample: getElementOuterHTML(headings[i + 1]).replace(\n          new RegExp(`<h${nextLevel}`, 'g'), \n          `<h${currentLevel + 1}`\n        ).replace(\n          new RegExp(`</h${nextLevel}>`, 'g'), \n          `</h${currentLevel + 1}>`\n        ),\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#headings-and-labels',\n      });\n    }\n  }\n}\n\n/**\n * Check for form controls without associated labels\n */\nfunction runFormLabelCheck(doc, results) {\n  const formControls = doc.querySelectorAll('input, select, textarea');\n  \n  formControls.forEach((control, index) => {\n    const position = estimateElementPosition(control, index);\n    const id = control.getAttribute('id');\n    const type = control.getAttribute('type') || '';\n    \n    // Skip hidden inputs, submit buttons, and elements with aria-label or aria-labelledby\n    if (\n      type === 'hidden' || \n      type === 'submit' || \n      type === 'button' ||\n      control.hasAttribute('aria-label') || \n      control.hasAttribute('aria-labelledby')\n    ) {\n      return;\n    }\n    \n    if (!id || !doc.querySelector(`label[for=\"${id}\"]`)) {\n      results.issues.push({\n        title: 'Form control without label',\n        severity: 'critical',\n        wcagReference: '1.3.1 Info and Relationships, 3.3.2 Labels or Instructions (Level A)',\n        description: `This ${control.tagName.toLowerCase()} element doesn't have a properly associated label.`,\n        impact: 'Screen reader users will not know the purpose of this form control, making it difficult or impossible to complete the form.',\n        position,\n        codeSnippet: getElementOuterHTML(control),\n        fixExample: !id \n          ? `<label for=\"unique-id\">Label text</label>\\n${getElementOuterHTML(control).replace('<' + control.tagName.toLowerCase(), '<' + control.tagName.toLowerCase() + ' id=\"unique-id\"')}` \n          : `<label for=\"${id}\">Label text</label>\\n${getElementOuterHTML(control)}`,\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#labels-or-instructions',\n      });\n    }\n  });\n}\n\n/**\n * Simplified implementation of color contrast check\n * Note: Real implementation would need to parse CSS and calculate actual contrast ratios\n */\nfunction runColorContrastCheck(doc, results) {\n  // This is a very simplified check - a real implementation would involve:\n  // 1. Getting computed styles\n  // 2. Calculating contrast ratios\n  // 3. Checking against WCAG requirements\n  \n  // For now, we'll just check for inline styles with potentially problematic colors\n  const elementsWithInlineStyles = doc.querySelectorAll('[style*=\"color\"], [style*=\"background\"]');\n  \n  elementsWithInlineStyles.forEach((element, index) => {\n    const style = element.getAttribute('style');\n    const position = estimateElementPosition(element, index);\n    \n    if (\n      /color:\\s*#([0-9a-f]{3}){1,2}/i.test(style) || \n      /color:\\s*rgb\\(/i.test(style) ||\n      /background(-color)?:\\s*#([0-9a-f]{3}){1,2}/i.test(style) ||\n      /background(-color)?:\\s*rgb\\(/i.test(style)\n    ) {\n      results.issues.push({\n        title: 'Potential color contrast issue',\n        severity: 'warning',\n        wcagReference: '1.4.3 Contrast (Minimum) (Level AA)',\n        description: 'Inline styles with color values detected. Ensure text has sufficient contrast against its background.',\n        impact: 'Users with low vision or color blindness may have difficulty reading text without adequate contrast.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: `<!-- Ensure a contrast ratio of at least 4.5:1 for normal text and 3:1 for large text -->\\n<!-- Consider using a color contrast checker tool -->`,\n        learnMoreUrl: 'https://webaim.org/resources/contrastchecker/',\n      });\n    }\n  });\n}\n\n/**\n * Check for links with unclear purpose\n */\nfunction runLinkPurposeCheck(doc, results) {\n  const links = doc.querySelectorAll('a');\n  \n  links.forEach((link, index) => {\n    const position = estimateElementPosition(link, index);\n    const linkText = link.textContent.trim();\n    \n    // Check for common ambiguous link text\n    const ambiguousTexts = ['click here', 'read more', 'more', 'link', 'here', 'this page', 'learn more'];\n    \n    if (ambiguousTexts.includes(linkText.toLowerCase())) {\n      results.issues.push({\n        title: 'Ambiguous link text',\n        severity: 'warning',\n        wcagReference: '2.4.4 Link Purpose (In Context) (Level A), 2.4.9 Link Purpose (Link Only) (Level AAA)',\n        description: `Link text \"${linkText}\" doesn't clearly indicate its purpose or destination.`,\n        impact: 'Screen reader users often navigate by links, and ambiguous link text makes it difficult to understand where links lead.',\n        position,\n        codeSnippet: getElementOuterHTML(link),\n        fixExample: getElementOuterHTML(link).replace(\n          linkText, \n          `Specific description of link destination`\n        ),\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#link-purpose-in-context',\n      });\n    }\n    \n    // Check for empty links\n    if (linkText === '' && !link.querySelector('img[alt]') && !link.hasAttribute('aria-label') && !link.hasAttribute('aria-labelledby')) {\n      results.issues.push({\n        title: 'Empty link',\n        severity: 'critical',\n        wcagReference: '2.4.4 Link Purpose (In Context) (Level A)',\n        description: 'This link has no text content or accessible name.',\n        impact: 'Screen reader users will not know the purpose of this link.',\n        position,\n        codeSnippet: getElementOuterHTML(link),\n        fixExample: getElementOuterHTML(link).replace(\n          '<a ', \n          '<a aria-label=\"Description of link purpose\" '\n        ),\n        learnMoreUrl: 'https://www.w3.org/WAI/tutorials/images/decorative/',\n      });\n    }\n  });\n}\n\n/**\n * Check for proper ARIA usage\n */\nfunction runARIACheck(doc, results) {\n  // Check for invalid ARIA roles\n  const elementsWithRoles = doc.querySelectorAll('[role]');\n  \n  // List of valid ARIA roles\n  const validRoles = [\n    'alert', 'alertdialog', 'application', 'article', 'banner', 'button', 'cell', 'checkbox',\n    'columnheader', 'combobox', 'complementary', 'contentinfo', 'definition', 'dialog', \n    'directory', 'document', 'feed', 'figure', 'form', 'grid', 'gridcell', 'group', 'heading',\n    'img', 'link', 'list', 'listbox', 'listitem', 'log', 'main', 'marquee', 'math', 'menu',\n    'menubar', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'navigation', 'none',\n    'note', 'option', 'presentation', 'progressbar', 'radio', 'radiogroup', 'region',\n    'row', 'rowgroup', 'rowheader', 'scrollbar', 'search', 'searchbox', 'separator', 'slider',\n    'spinbutton', 'status', 'switch', 'tab', 'table', 'tablist', 'tabpanel', 'term',\n    'textbox', 'timer', 'toolbar', 'tooltip', 'tree', 'treegrid', 'treeitem'\n  ];\n  \n  elementsWithRoles.forEach((element, index) => {\n    const role = element.getAttribute('role');\n    const position = estimateElementPosition(element, index);\n    \n    if (!validRoles.includes(role)) {\n      results.issues.push({\n        title: 'Invalid ARIA role',\n        severity: 'critical',\n        wcagReference: '4.1.2 Name, Role, Value (Level A)',\n        description: `The role \"${role}\" is not a valid ARIA role.`,\n        impact: 'Assistive technologies rely on valid roles to communicate the purpose of elements to users.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: getElementOuterHTML(element).replace(\n          `role=\"${role}\"`, \n          `role=\"[appropriate valid role]\"`\n        ),\n        learnMoreUrl: 'https://www.w3.org/TR/wai-aria-1.1/#role_definitions',\n      });\n    }\n  });\n  \n  // Check for required ARIA attributes\n  const elementsWithRelevantRoles = doc.querySelectorAll('[role=\"checkbox\"], [role=\"combobox\"], [role=\"slider\"], [role=\"spinbutton\"]');\n  \n  elementsWithRelevantRoles.forEach((element, index) => {\n    const role = element.getAttribute('role');\n    const position = estimateElementPosition(element, index);\n    \n    if (!element.hasAttribute('aria-checked') && role === 'checkbox') {\n      results.issues.push({\n        title: 'Missing required ARIA attribute',\n        severity: 'critical',\n        wcagReference: '4.1.2 Name, Role, Value (Level A)',\n        description: 'Elements with role=\"checkbox\" must have an aria-checked attribute.',\n        impact: 'Screen reader users will not know the state of this checkbox.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: getElementOuterHTML(element).replace(\n          `role=\"checkbox\"`, \n          `role=\"checkbox\" aria-checked=\"false\"`\n        ),\n        learnMoreUrl: 'https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/checkbox_role',\n      });\n    }\n    \n    if (!element.hasAttribute('aria-valuemin') && (role === 'slider' || role === 'spinbutton')) {\n      results.issues.push({\n        title: 'Missing required ARIA attribute',\n        severity: 'critical',\n        wcagReference: '4.1.2 Name, Role, Value (Level A)',\n        description: `Elements with role=\"${role}\" must have aria-valuemin, aria-valuemax, and aria-valuenow attributes.`,\n        impact: 'Screen reader users will not know the range and current value of this control.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: getElementOuterHTML(element).replace(\n          `role=\"${role}\"`, \n          `role=\"${role}\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"50\"`\n        ),\n        learnMoreUrl: `https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/${role}_role`,\n      });\n    }\n  });\n}\n\n/**\n * Check for keyboard navigability issues\n */\nfunction runKeyboardNavigationCheck(doc, results) {\n  // Check for tabindex values greater than 0\n  const elementsWithHighTabindex = doc.querySelectorAll('[tabindex]');\n  \n  elementsWithHighTabindex.forEach((element, index) => {\n    const tabindex = parseInt(element.getAttribute('tabindex'));\n    const position = estimateElementPosition(element, index);\n    \n    if (tabindex > 0) {\n      results.issues.push({\n        title: 'Positive tabindex value',\n        severity: 'warning',\n        wcagReference: '2.1.1 Keyboard (Level A), 2.4.3 Focus Order (Level A)',\n        description: `This element has tabindex=\"${tabindex}\". Positive tabindex values create a custom tab order that may be confusing.`,\n        impact: 'Keyboard users may experience an unexpected navigation order, making the page difficult to use.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: getElementOuterHTML(element).replace(\n          `tabindex=\"${tabindex}\"`, \n          `tabindex=\"0\"`\n        ),\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG21/Techniques/html/H4',\n      });\n    }\n  });\n  \n  // Check for potentially inaccessible custom controls\n  const customControls = doc.querySelectorAll('div[onclick], span[onclick]');\n  \n  customControls.forEach((element, index) => {\n    const position = estimateElementPosition(element, index);\n    \n    if (!element.hasAttribute('tabindex') && !element.hasAttribute('role')) {\n      results.issues.push({\n        title: 'Inaccessible custom control',\n        severity: 'critical',\n        wcagReference: '2.1.1 Keyboard (Level A), 4.1.2 Name, Role, Value (Level A)',\n        description: 'This element has click handlers but is not keyboard accessible and has no ARIA role.',\n        impact: 'Keyboard users and screen reader users cannot access this interactive element.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: getElementOuterHTML(element)\n          .replace('<div', '<div role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === \\'Enter\\') this.click()\"')\n          .replace('<span', '<span role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === \\'Enter\\') this.click()\"'),\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#name-role-value',\n      });\n    }\n  });\n}\n\n/**\n * Check for document language\n */\nfunction runDocumentLangCheck(doc, results) {\n  const html = doc.querySelector('html');\n  \n  if (!html.hasAttribute('lang')) {\n    results.issues.push({\n      title: 'Missing language attribute',\n      severity: 'critical',\n      wcagReference: '3.1.1 Language of Page (Level A)',\n      description: 'The HTML element should have a lang attribute that identifies the language of the page.',\n      impact: 'Screen readers need the language attribute to correctly pronounce and interpret content.',\n      position: { line: 1, column: 1 },\n      codeSnippet: getElementOuterHTML(html).substring(0, 50) + '...',\n      fixExample: getElementOuterHTML(html).replace('<html', '<html lang=\"en\"'),\n      learnMoreUrl: 'https://www.w3.org/WAI/WCAG21/Techniques/html/H57',\n    });\n  }\n}\n\n/**\n * Check for div/span elements used as buttons\n */\nfunction runButtonRoleCheck(doc, results) {\n  // Find elements that might be functioning as buttons\n  const fakeButtons = doc.querySelectorAll('div[class*=\"button\"], span[class*=\"button\"], div[class*=\"btn\"], span[class*=\"btn\"]');\n  \n  fakeButtons.forEach((element, index) => {\n    const position = estimateElementPosition(element, index);\n    \n    if (!element.hasAttribute('role')) {\n      results.issues.push({\n        title: 'Div/span used as button without proper role',\n        severity: 'critical',\n        wcagReference: '4.1.2 Name, Role, Value (Level A)',\n        description: 'This element appears to be used as a button but doesn\\'t have the button role.',\n        impact: 'Screen reader users will not know this element is a button.',\n        position,\n        codeSnippet: getElementOuterHTML(element),\n        fixExample: `<!-- Better solution: Use a real button element -->\n<button class=\"${element.className}\">${element.innerHTML}</button>\n\n<!-- Alternative: Add proper ARIA role and keyboard support -->\n${getElementOuterHTML(element)\n  .replace(`<${element.tagName.toLowerCase()}`, \n  `<${element.tagName.toLowerCase()} role=\"button\" tabindex=\"0\" onkeydown=\"if(event.key === 'Enter') this.click()\"`)}`,\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#name-role-value',\n      });\n    }\n  });\n}\n\n/**\n * Check for proper table structure\n */\nfunction runTableStructureCheck(doc, results) {\n  const tables = doc.querySelectorAll('table');\n  \n  tables.forEach((table, index) => {\n    const position = estimateElementPosition(table, index);\n    \n    // Check for data tables without headers\n    if (table.querySelectorAll('td').length > 0 && table.querySelectorAll('th').length === 0) {\n      results.issues.push({\n        title: 'Table missing headers',\n        severity: 'warning',\n        wcagReference: '1.3.1 Info and Relationships (Level A)',\n        description: 'This table appears to be a data table but has no header cells (th elements).',\n        impact: 'Screen reader users will not know the relationship between header and data cells.',\n        position,\n        codeSnippet: getElementOuterHTML(table).substring(0, 150) + '...',\n        fixExample: `<table>\n  <thead>\n    <tr>\n      <th scope=\"col\">Header 1</th>\n      <th scope=\"col\">Header 2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Data 1</td>\n      <td>Data 2</td>\n    </tr>\n  </tbody>\n</table>`,\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#focus-order',\n      });\n    }\n    \n    // Check for tables used for layout\n    if (\n      table.querySelectorAll('th').length === 0 && \n      !table.hasAttribute('role') && \n      table.querySelectorAll('table').length === 0\n    ) {\n      results.issues.push({\n        title: 'Table potentially used for layout',\n        severity: 'info',\n        wcagReference: '1.3.1 Info and Relationships (Level A)',\n        description: 'This table might be used for layout purposes. If so, it should have role=\"presentation\" or role=\"none\".',\n        impact: 'Screen readers announce layout tables as tables, which can confuse users when they\\'re used for visual layout only.',\n        position,\n        codeSnippet: getElementOuterHTML(table).substring(0, 150) + '...',\n        fixExample: `<!-- If this is a layout table: -->\n<table role=\"presentation\">\n  <!-- table content -->\n</table>\n\n<!-- Better modern solution: Use CSS for layout instead of tables -->`,\n        learnMoreUrl: 'https://www.w3.org/WAI/WCAG22/quickref/?versions=2.2#language-of-page',\n      });\n    }\n  });\n}\n\n/**\n * Helper function to estimate the position of an element\n * In a real implementation, this would be more accurate\n */\nfunction estimateElementPosition(element, index) {\n  // This is a simplification - a real implementation would \n  // parse the actual HTML to get accurate line and column\n  return {\n    line: index + 1,\n    column: 1\n  };\n}\n\n/**\n * Get the outer HTML of an element \n * Handles potential serialization issues\n */\nfunction getElementOuterHTML(element) {\n  try {\n    return element.outerHTML;\n  } catch (e) {\n    return `<${element.tagName.toLowerCase()}>...</${element.tagName.toLowerCase()}>`;\n  }\n}\n\n/**\n * Apply all fixes to the original HTML code\n */\nfunction applyFixes(originalHtml, issues) {\n  let fixedHtml = originalHtml;\n  \n  // Sort issues by position line/column in reverse order (bottom to top)\n  // This prevents position changes from affecting later fixes\n  const sortedIssues = [...issues].sort((a, b) => {\n    if (b.position.line !== a.position.line) {\n      return b.position.line - a.position.line;\n    }\n    return b.position.column - a.position.column;\n  });\n  \n  // Apply each fix\n  sortedIssues.forEach(issue => {\n    // Handle special insertion cases first\n    if (issue.insertBefore && issue.insertContent) {\n      // For issues that need to insert content before an element\n      if (issue.codeSnippet && fixedHtml.includes(issue.codeSnippet)) {\n        fixedHtml = fixedHtml.replace(issue.codeSnippet, `${issue.insertContent}\\n${issue.codeSnippet}`);\n      }\n    } \n    else if (issue.insertAfter && issue.insertContent) {\n      // For issues that need to insert content after an element\n      if (fixedHtml.includes(issue.insertAfter)) {\n        fixedHtml = fixedHtml.replace(issue.insertAfter, `${issue.insertAfter}${issue.insertContent}`);\n      }\n    }\n    // Regular code snippet replacement\n    else if (issue.codeSnippet && issue.fixExample) {\n      // Extract the fix from examples that may contain comments\n      let fixContent = issue.fixExample;\n      \n      // If the fix contains HTML comments with alternatives, extract the first recommended alternative\n      if (fixContent.includes('<!-- ')) {\n        const alternatives = fixContent.split(/<!--.*?-->/g)\n          .map(part => part.trim())\n          .filter(part => part.length > 0);\n        \n        if (alternatives.length > 0) {\n          fixContent = alternatives[0];\n        }\n      }\n      \n      // Apply the fix\n      if (fixContent) {\n        // For exact match, do direct replacement\n        if (fixedHtml.includes(issue.codeSnippet)) {\n          fixedHtml = fixedHtml.replace(issue.codeSnippet, fixContent);\n        } \n        // If not found, try to do a more context-aware replacement\n        else {\n          // This is a simplified approach - a real implementation would\n          // use a proper HTML parser for precise replacement\n          const lines = fixedHtml.split('\\n');\n          const targetLine = issue.position.line - 1; // 0-based index\n          \n          if (targetLine >= 0 && targetLine < lines.length) {\n            // Simple heuristic: check if some part of the code snippet is in the line\n            const snippetWords = issue.codeSnippet.split(/[<>\\s=\"']/);\n            const lineContainsSnippet = snippetWords.some(word => \n              word.length > 3 && lines[targetLine].includes(word)\n            );\n            \n            if (lineContainsSnippet) {\n              lines[targetLine] = fixContent;\n              fixedHtml = lines.join('\\n');\n            }\n          }\n        }\n      }\n    }\n  });\n  \n  return fixedHtml;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}